# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson


'.text.tex.latex':
	'environment':
		'prefix': 'beg'
		'body': '\\\\begin{${1:center}}\n\t$2\n\\\\end{${1:center}}\n#3'

	'inline environment':
		'prefix': 'ibeg'
		'body': '\\\\begin{$1} $2 \\\\end{$1}$3'
	'tikzcd':
		'prefix' : 'cd'
		'body' : '\\\\begin{center}\n\t\\\\begin{tikzcd}\n\t\t$1\n\t\\\\end{tikzcd}\n\\\\end{center}'
	'new command':
		'prefix': 'new'
		'body' : '\\\\newcommand{\\\\$1}{$2}\n$3'
	'use package':
		'prefix' : 'use'
		'body' : '\\\\usepackage{$1}\n$2'
	'emphasize' :
		'prefix' : 'em'
		'body' : '\\\\emph{$1}$2'
	'diagram':
		'prefix' : 'tik'
		'body' : '\\\\begin{center}\n\t\\\\begin{tikzpicture}\n\t\t$1\n\t\\\\end{tikzpicture}\n\\\\end{center}'
	'bold': 
		'prefix': 'b'
		'body' : '\\\\textbf{$1}$2'

# This doesn't work.
	# "editor-fold":
	#     "prefix": "%e
	#     "body": "// <editor-fold desc='$1'>\n// </editor-fold>"`
